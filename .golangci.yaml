# yaml-language-server: $schema=https://raw.githubusercontent.com/golangci/golangci-lint/refs/tags/v1.63.4/jsonschema/golangci.jsonschema.json
run:
  allow-parallel-runners: true
  allow-serial-runners: true
  modules-download-mode: readonly
output:
  show-stats: true
  sort-order:
  - linter
  - severity
  - file
  sort-results: true
  formats:
  - format: colored-line-number
  - format: sarif
    path: golangci-lint.sarif
linters-settings:
  asasalint: {}
  bidichk: {}
  copyloopvar:
    check-alias: true
  cyclop:
    max-complexity: 10 # http://www.mccabe.com/pdf/mccabe-nist235r.pdf chapter 2.5
    package-average: 5
    skip-tests: false
  decorder:
    dec-order:
    - const
    - var
    - type
    - func
    disable-const-dec-num-check: false
    disable-dec-num-check: false
    disable-dec-order-check: false
    disable-init-func-first-check: false
    ## allows multiple type keywords; its usually more idiomatic than grouping
    disable-type-dec-num-check: true
    disable-var-dec-num-check: false
    ignore-underscore-vars: false
  depguard:
    rules:
      json:
        deny:
        - pkg: encoding/json
          desc: >-
            The standard library json package is not optimized. Use instead the
            github.com/goccy/go-json, which is faster and memory-performant.
  dogsled:
    max-blank-identifiers: 2
  dupl:
    threshold: 100
  dupword: {}
  errcheck:
    check-blank: true
    check-type-assertions: true
    disable-default-exclusions: true
    exclude-functions:
    - (*database/sql.Tx).Rollback
    - (*os.File).Close
    - (*strings.Builder).WriteString
    - (io.ReadCloser).Close
    - fmt.Fprint
    - fmt.Fprintf
    - fmt.Fprintln
    - fmt.Print
    - fmt.Printf
    - fmt.Println
    - github.com/goccy/go-json.Marshal
    - github.com/goccy/go-json.MarshalIndent
    - github.com/wwmoraes/gotell.ForceFlush
    - github.com/wwmoraes/gotell.Shutdown
    - json.Marshal
    - json.MarshalIndent
  errchkjson:
    check-error-free-encoding: true
    report-no-exported: true
  errorlint: {}
  exhaustive:
    check-generated: true
    default-case-required: true
    default-signifies-exhaustive: false
    explicit-exhaustive-map: true
    explicit-exhaustive-switch: true
    ignore-enum-members: ".+_UNSPECIFIED"
  exhaustruct:
    exclude:
    - '^github\.com/dgraph-io/badger/v4\.Options$'
    - '^github\.com/redis/go-redis/v9\.Options$'
    - '^github\.com/wwmoraes/anilistarr/internal/adapters\.CacheParams$'
    - '^github\.com/wwmoraes/anilistarr/internal/api\.Service$'
    - '^net/http\.Response$'
    - '^net/http\.Server$'
  forbidigo:
    exclude-godoc-examples: true
    analyze-types: true
    forbid:
    - p: ^panic$
      msg: >-
        Do not use panic statements.
        It's hard to debug and disrupts observability.
    - p: ^print.*$
      msg: >-
        Do not use built-in print statements.
        Prefer a logger and/or the Sprint*/Fprint* variants.
    - p: ^fmt\.Print.*$
      msg: >-
        Do not use plain print statements.
        Prefer a logger and/or the Sprint*/Fprint* variants.
    - p: ^assert$
      msg: >-
        Do not use the plain assert.
        Use AssertWith and a meaningful wrapping message.
    - p: ^exec\.(Cmd|Command|CommandContext)*
      pkg: os/exec
      msg: >-
        Do not create subprocesses using external binaries.
        Search on pkg.go.dev for a library to solve the problem directly instead.
    - p: ^log\..*
      pkg: log
      msg: >-
        Do not use the standard logger.
        Use the telemetry logger instead.
    - p: \berrors\.ErrUnsupported\b
      pkg: errors
      msg: >-
        Use a local error instead to better explain something that's unsupported
        or unimplemented.
  funlen:
    ignore-comments: true
  gci:
    custom-order: true
    skip-generated: true
    sections:
    - standard
    - default
    - prefix(github.com/wwmoraes/anilistarr)
  ginkgolinter: {}
  gocognit:
    min-complexity: 10
  goconst:
    ignore-calls: false
    ignore-tests: true
    min-len: 2
    min-occurrences: 3
    numbers: true
  gocritic:
    enable-all: true
  gocyclo:
    min-complexity: 10 # http://www.mccabe.com/pdf/mccabe-nist235r.pdf chapter 2.5
  godot:
    capital: false
    period: false
    scope: all
  godox:
    keywords:
    - "TODO"
    - "BUG"
    - "FIX"
    - "NOTE"
    - "[ ]"
  gofmt:
    simplify: true
    rewrite-rules:
    - pattern: 'interface{}'
      replacement: 'any'
    - pattern: 'a[b:len(a)]'
      replacement: 'a[b:]'
  gofumpt:
    extra-rules: true
    module-path: github.com/wwmoraes/anilistarr
  goheader:
    template-path: .vscode/header.txt # TODO try goheader again...
  goimports:
    local-prefixes: github.com/wwmoraes/anilistarr
  gomoddirectives:
    exclude-forbidden: true
    replace-allow-list:
    - github.com/miladabc/gonfig
    - github.com/ugorji/go
  gomodguard:
    blocked:
      local_replace_directives: true
    allowed:
      domains:
      - github.com
      - go.mongodb.org
      - go.opentelemetry.io
      - golang.org
      - google.golang.org
      - gopkg.in
      modules:
      - dario.cat/mergo
      - git.sr.ht/~emersion/go-jsonschema
      - go.etcd.io/bbolt
      - go.uber.org/automaxprocs
      - modernc.org/sqlite
  gosimple:
    checks: ["all"]
  gosec:
    confidence: low
    exclude-generated: false
    severity: low
  gosmopolitan:
    allow-time-local: false
    ignore-tests: false
  govet:
    disable:
    ## shadow warns about shadowed err variables, which is a common practice
    - shadow
    enable-all: true
    settings: {}
  grouper:
    const-require-grouping: false
    const-require-single-const: true
    import-require-grouping: false
    import-require-single-import: true
    type-require-grouping: false
    type-require-single-type: false
    var-require-grouping: false
    var-require-single-var: true
  importas:
    no-extra-aliases: true
    no-unaliased: false
    alias:
    - alias: pcsngv1alpha
      pkg: github.com/wwmoraes/anilistarr/internal/drivers/grpc/pcsng/v1alpha
    - alias: semconv
      pkg: go.opentelemetry.io/otel/semconv/v1.24.0
    - alias: otelruntime
      pkg: go.opentelemetry.io/contrib/instrumentation/runtime
    - alias: sdkmetric
      pkg: go.opentelemetry.io/otel/sdk/metric
    - alias: sdktrace
      pkg: go.opentelemetry.io/otel/sdk/trace
    # avoids clashing with the main badger package
    - alias: badgerstore
      pkg: github.com/ostafen/clover/v2/store/badger
    - alias: telemetry
      pkg: github.com/wwmoraes/gotell
  inamedparam: {}
  interfacebloat:
    max: 6 # TODO(william) fine tune the maximum methods per interface
  ireturn:
    allow:
    - anon
    - empty
    - error
    - stdlib
    - generic
    - Option$
  lll:
    line-length: 120
    tab-width: 2
  loggercheck:
    kitlog: false
    klog: false
    logr: true
    no-printf-like: true
    require-string-key: false
    zap: false
  maintidx:
    # https://learn.microsoft.com/en-us/visualstudio/code-quality/code-metrics-maintainability-index-range-and-meaning?view=vs-2022
    under: 35 # 20% of 171
  makezero:
    always: true
  misspell:
    locale: US
    mode: restricted
    ignore-words:
    - cancelled
    extra-words:
    ## convention even though double L is en-GB
    - correction: cancelled
      typo: canceled
  mnd:
    ignored-functions:
    - '^bbolt\.Open$'
    - '^cobra\.ExactArgs$'
    - '^net\.IPv4$'
    - '^os\.Exit$'
    - '^os\.MkdirAll$'
    - '^os\.OpenFile$'
    - '^os\.WriteFile$'
    ignored-numbers:
    - "1"
    - "2"
  musttag:
    functions:
    - name: (*github.com/miladabc/gonfig.Config).Into
      tag: config
      arg-pos: 0
  nakedret:
    max-func-lines: 0
  nestif:
    min-complexity: 4 # TODO(william) reduce nested if complexity to 3
  nilnil: {}
  nlreturn:
    block-size: 1
  nolintlint:
    require-explanation: true
    require-specific: true
  nonamedreturns:
    report-error-in-defer: true
  paralleltest: {}
  perfsprint: {}
  prealloc:
    for-loops: true
    range-loops: true
    simple: true
  predeclared:
    q: true
  promlinter:
    strict: true
  protogetter: {}
  reassign:
    patterns: [".*"]
  revive:
    enable-all-rules: true
    ignore-generated-header: true
    rules:
    # custom settings
    - name: exported
      arguments:
      - checkPrivateReceivers
      - sayRepetitiveInsteadOfStutters
    - name: unhandled-error
      severity: warning
      arguments:
      - "strings\\.Builder\\.WriteString"
      - "fmt\\.(P|Fp|Sp)rint(f|ln)?"
    # undesired checks
    - name: add-constant # duplicate of mnd
      disabled: true
    - name: cyclomatic # duplicate of cyclop and gocyclo
      disabled: true
    - name: cognitive-complexity # duplicate of gocyclo
      disabled: true
    - name: confusing-naming # drivers implement the same interface methods
      disabled: true
    - name: function-length # duplicate of funlen
      disabled: true
    - name: get-return # handlers don't return values
      disabled: true
    - name: line-length-limit # duplicate of lll
      disabled: true
    - name: max-public-structs # DDD+ISP = granular interfaces
      disabled: true
  rowserrcheck: {}
  sloglint:
    no-global: all
    context: all
    static-msg: true
  spancheck:
    checks:
    - end
    - record-error
    - set-status
    extra-start-span-signatures:
    - "github\\.com/wwmoraes/gotell\\.Start:opentelemetry"
    ignore-check-signatures: # does not work sadly
    - "(github\\.com/wwmoraes/gotell\\.Span)\\.Assert"
    - "(github\\.com/wwmoraes/gotell\\.Span)\\.Errorf"
  staticcheck:
    checks: [all]
  stylecheck:
    checks: [all]
    initialisms: []
    http-status-code-whitelist: []
  tagalign:
    strict: true
  tagliatelle:
    case:
      use-field-name: true
      rules:
        config: upperSnake
        json: goCamel
        toml: goCamel
        yaml: goCamel
  tenv:
    all: true
  testifylint:
    enable-all: true
  testpackage:
    allow-packages: []
  thelper: {}
  usestdlibvars:
    constant-kind: true
    crypto-hash: true
    default-rpc-path: true
    http-method: true
    http-status-code: true
    sql-isolation-level: true
    time-layout: true
    time-month: true
    time-weekday: true
    tls-signature-scheme: true
  unconvert:
    fast-math: true
  unparam:
    check-exported: true
  unused: {}
  varnamelen:
    ignore-decls:
    - w http.ResponseWriter
    - r *http.Request
    ignore-names:
    - db # database handler/client
    - fd # file descriptor/handler
    - id
    - ok
    - tt # table test
    - tx # database transaction
    - wg # WaitGroup
  whitespace:
    multi-func: false
    multi-if: true
  wrapcheck:
    ignoreSigs:
    - (github.com/wwmoraes/gotell.Span).Assert(
    - (github.com/wwmoraes/gotell.Span).Errorf(
    - errors.Join(
    - errors.New(
    - errors.Unwrap(
    - fmt.Errorf(
    - github.com/wwmoraes/anilistarr/internal/usecases.ErrorJoinIf(
    - status.Error(
    - status.Errorf(
  wsl: {}
linters:
  disable:
  - godox # Checks FIXME, TODO and other comment keywords.
  - spancheck # Checks for mistakes with OpenTelemetry/Census spans.
  ## opted out
  - ginkgolinter # Enforces standards of using ginkgo and gomega.
  - gochecknoglobals # Checks that no global variables exist. (no settings sadly)
  ## broken
  - cyclop ## triggers package-level warning at the last file, skips nolint elsewhere
  - godot ## Check if comments end in a period. [changes comments indiscriminately]
  - goheader ## Checks is file header matches to pattern. [breaks packages]
  ## deprecated linters (step 1)
  - exportloopref
  ## deprecated linters (step 2)
  # - execinquery
  # - gomnd ## renamed to mnd
  enable-all: true
  fast: false
issues:
  exclude:
  ## gocritic exceptions
  ### unnamedResult is a dupe of revive's confusing-results; it also doesn't
  ### detect type aliases like revive does
  - "unnamedResult: consider giving a name to these results"
  ## gomodguard: dupe of gomoddirectives
  - "import of package `(.+)` is blocked because the module has a local replace directive."
  exclude-case-sensitive: false
  exclude-dirs:
  - tmp
  exclude-dirs-use-default: true
  exclude-files:
  - ".*\\.sql\\.go$"
  - ".*\\.xo\\.go$"
  - ".*_gen\\.go$"
  - internal/drivers/sqlite/model/db.go
  - internal/drivers/sqlite/model/models.go
  - internal/drivers/trackers/anilist/generated.go
  exclude-generated: strict
  exclude-rules:
  - path: '.+_test\.go'
    linters:
    - containedctx
    - dupl
    - err113
    - exhaustruct
    - funlen
    - maintidx
  ## wire functions return iface so it can switch drivers without touching return types
  - path: cmd/handler/wire.go
    linters:
    - ireturn
  exclude-use-default: true
  fix: false
  include:
  ## - EXC0001 # (errcheck): unchecked errors on common functions (os stds/env/close, fmt prints)
  - EXC0002 # comment on exported (method|function|type|const)|should have( a package)? comment|comment should be of the form
  ## - EXC0003 # (golint): False positive when tests are defined in package 'test'
  - EXC0004 # possible misuse of unsafe.Pointer|should have signature
  ## - EXC0005 # (staticcheck): explicit 'break' in a 'switch'
  - EXC0006 # G103: Use of unsafe calls should be audited
  - EXC0007 # G204: Subprocess launched with variable
  ## - EXC0008 # (gosec): Duplicate of errcheck G104
  - EXC0009 # (G301|G302|G307): Expect (directory permissions to be 0750|file permissions to be 0600) or less
  - EXC0010 # G304: Potential file inclusion via variable
  # - EXC0011 # (ST1000|ST1020|ST1021|ST1022) method|function|type|const|package comment requirements
  - EXC0012 # exported (.+) should have comment( \(or a comment on this block\))? or be unexported
  - EXC0013 # package comment should be of the form "(.+)..."
  - EXC0014 # comment on exported (.+) should be of the form "(.+)..."
  - EXC0015 # should have a package comment
  max-issues-per-linter: 0
  max-same-issues: 0
severity:
  default-severity: error
  rules:
  - linters:
    - err113
    - exhaustruct
    - gocritic
    - revive
    severity: warning
  - linters:
    - dupl
    - godox
    severity: note
  ## deprecated or broken
  - linters:
    - godot
    - goheader
    - execinquery
    - gomnd
    severity: none
